name: macOS-Remote-Clean

on:
  workflow_dispatch:

jobs:
  macos-remote:
    runs-on: macos-latest
    timeout-minutes: 3600

    steps:
      - name: üçè Homebrew update + basic utilities (clean)
        run: |
          echo "üîß Updating Homebrew..."
          which brew >/dev/null 2>&1 || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update || true
          echo "‚úÖ Homebrew ready"
          # Minimal utilities only (remove any pentest tools)
          brew install git wget htop || true

      - name: üë§ User Info
        run: |
          echo "Current macOS user: $(whoami)"
          echo "Home directory: $HOME"

      - name: üíæ Check Swap
        run: |
          echo "‚öôÔ∏è macOS uses dynamic swap by default (no manual swapfile):"
          sysctl vm.swapusage || true

      - name: üåê Install & Connect Tailscale (robust)
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          if [ -z "${TAILSCALE_AUTH_KEY}" ]; then
            echo "ERROR: TAILSCALE_AUTH_KEY is empty. Set it in repo Settings ‚Üí Secrets ‚Üí Actions."
            exit 1
          fi

          echo "üöÄ Installing Tailscale..."
          brew install tailscale || true

          echo "üîÅ Starting tailscaled..."
          sudo tailscaled >/tmp/tailscaled.log 2>&1 &
          sleep 3

          echo "üîê Bringing interface up..."
          if ! sudo tailscale up --authkey="${TAILSCALE_AUTH_KEY}" --hostname="macos-remote-${GITHUB_RUN_ID}" --ssh --accept-dns=true --accept-routes=true 2>&1 | tee /tmp/tailscale_up.log; then
            echo "---- tailscale_up.log ----"
            sed -n '1,200p' /tmp/tailscale_up.log || true
            echo "ERROR: tailscale up failed. Likely reasons:"
            echo "  - Auth key is invalid/expired/revoked"
            echo "  - You provided the wrong secret (API key instead of auth key)"
            exit 1
          fi

          TS_IP=$(tailscale ip -4 | head -n 1 || true)
          echo "TAILSCALE_IP=${TS_IP}" >> $GITHUB_ENV
          echo "Tailscale connected, IP: ${TS_IP}"

      - name: üì° Print Remote Access Info
        run: |
          echo "======================================"
          echo "üçé macOS Remote (clean)"
          echo "Tailscale IP : ${{ env.TAILSCALE_IP }}"
          echo "User         : $(whoami)"
          echo "Access       : SSH via Tailscale (no RDP/XRDP on macOS hosted runners)"
          echo "Command      : ssh $(whoami)@${{ env.TAILSCALE_IP }}"
          echo "======================================"

      - name: üïì Keep session alive
        run: |
          while true; do
            echo "[$(date)] macOS runner alive (Tailscale: ${{ env.TAILSCALE_IP }})"
            sleep 300
          done
